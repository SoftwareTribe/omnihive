name: OmniHive Server

on:
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              id: checkout
              uses: actions/checkout@v2
            - name: PNPM Install
              uses: pnpm/action-setup@v2.0.1
              with:
                  version: 6.16.1
                  run_install: |
                      - recursive: true
            - name: Add NodeJS
              id: addNode
              uses: actions/setup-node@v1
              with:
                  node-version: "16"
            - name: Run Prerequisites
              id: runPrerequisites
              env:
                  GH_CLI_AUTH_TOKEN: ${{secrets.GH_CLI_AUTH_TOKEN}}
                  GH_EMAIL: ${{ secrets.GH_EMAIL }}
                  GH_NAME: ${{ secrets.GH_NAME }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: |
                  echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
                  echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ./.npmrc
                  git config --global user.email "$GH_EMAIL"
                  git config --global user.name "$GH_NAME"
                  echo $GH_CLI_AUTH_TOKEN > gh.txt
                  gh auth login --with-token < gh.txt
                  rm gh.txt
            - name: Run Monorepo Build Script
              id: monorepoBuild
              run: node -r ts-node/register ./build-server.ts
            - name: Log into Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Push to Docker Hub - Latest
              uses: docker/build-push-action@v2
              with:
                  push: true
                  tags: withonevision/omnihive
                  file: ./docker-server.dockerfile
                  context: ./
            - name: Get Version Number
              id: version
              run: echo "::set-output name=VERSION::$(node -p -e "require('./dist/server/omnihive/package.json').version")"
            - name: Push to Docker Hub - Version Number
              uses: docker/build-push-action@v2
              with:
                  push: true
                  tags: withonevision/omnihive:${{ steps.version.outputs.VERSION }}
                  file: ./docker-server.dockerfile
                  context: ./
            - name: Create GitHub Release
              run: |
                  gh release create ${{ steps.version.outputs.VERSION }} ./omnihive.tgz
